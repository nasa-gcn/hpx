name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55  # v5.5.0
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install mypy ruff

      - name: ruff
        run: ruff check

      - name: ruff format
        run: ruff format --check

      - name: mypy
        run: mypy . --ignore-missing-imports

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55  # v5.5.0
        with:
          python-version: '3.12'

      - name: Install apt packages
        run: sudo apt-get install -y libcgal-dev

      - name: Install package
        run: |
          pip install ninja gcovr pytest-cov
          python -c 'import subprocess; import tomllib; subprocess.run(["pip", "install", *tomllib.load(open("pyproject.toml", "rb"))["build-system"]["requires"]], check=True)'
          pip install --no-build-isolation -Csetup-args=-Dbuildtype=debug -Csetup-args=-Db_coverage=true -ve .[test]

      - name: Run tests
        run: pytest --benchmark-disable --cov test

      - name: Analyze C coverage
        run: gcovr --cobertura cobertura.xml

      - name: Upload to Codecov.io
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d  # v5.0.0-beta
        with:
          files: ./.coverage,./cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
