[project]
name = "hpx"
dependencies = [
    "numpy>=1.23, <2",
]
requires-python = ">=3.9"
version = "0.0.1"

[project.optional-dependencies]
test = [
    "astropy",
    "pytest",
    "pytest-benchmark",
    "scipy",
]

[build-system]
build-backend = 'mesonpy'
requires = [
    "meson-python",
    "numpy>=2.0.0rc1",
]

[tool.meson-python]
limited-api = true

[tool.cibuildwheel]
build-verbosity = 1
skip = [
    # Skip these platforms because conda-forge does not support them, and we
    # are using conda to install our external shared library dependencies.
    "*i686*", "*musl*",
    # Skip these platforms because the configuration is failing with the error
    # `Need python for x86_64, but found x86`.
    # See https://github.com/nasa-gcn/hpx/pull/14
    "*win32",
    # Skip this platform because meson cannot find numpy-config.
    # See https://github.com/nasa-gcn/hpx/pull/12
    "pp*-win_amd64",
]
test-extras = ["test"]
test-command = ["pytest {project}/test --benchmark-disable"]
before-all = [
    "curl -L https://micro.mamba.pm/install.sh | bash",
    "bash -c '~/.local/bin/micromamba install -y --prefix ~/micromamba cgal-cpp cmake'",
]

[tool.cibuildwheel.environment]
CMAKE = "$HOME/micromamba/bin/cmake"

[tool.cibuildwheel.linux]
# Build Linux wheels for aarch64 under emulation.
archs = ["auto", "aarch64"]

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair --add-path C:\\\\Users\\\\runneradmin\\\\micromamba\\\\Library\\\\bin -w {dest_dir} {wheel}"
# Meson support for the Python limited API on Windows is broken.
# See https://github.com/mesonbuild/meson/issues/13167
config-settings.setup-args = "-Dpython.allow_limited_api=false"

[tool.cibuildwheel.windows.environment]
CMAKE = "C:\\\\Users\\\\runneradmin\\\\micromamba\\\\Library\\\\bin\\\\cmake"

[[tool.cibuildwheel.overrides]]
select = "pp*"
# PyPy does not support the Python limited API.
config-settings.setup-args = "-Dpython.allow_limited_api=false"
# We can't test PyPy wheels because Scipy doesn't distributes PyPy wheels.
test-extras = []
test-command = []
